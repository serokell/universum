# SPDX-FileCopyrightText: 2020 Kowainik
# SPDX-FileCopyrightText: 2020 Serokell <https://serokell.io/>
#
# SPDX-License-Identifier: MPL-2.0

# Sources:
# • https://github.com/kowainik/validation-selective/blob/5b46cd4810bbaa09b704062ebbfa2bb47137425d/.github/workflows/ci.yml
# • https://kodimensional.dev/github-actions

name: CI

# Trigger the workflow on push or pull request, but only for the master branch
on:
  pull_request:
  push:
    branches: [master]

jobs:
  xrefcheck:
    name: Verify cross references
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: serokell/xrefcheck-action@v1
      with:
        xrefcheck-version: 0.3.1

  cabal:
    name: ${{ matrix.os }} / ghc ${{ matrix.ghc }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        cabal: ["3.12"]
        # If you update this list of supported compiler versions,
        # make sure to update the `tested-with` section of `universum.cabal`.
        ghc:
          - "8.10.7"
          - "9.0.2"
          - "9.2.8"
          - "9.4.8"
          - "9.6.6"
          - "9.8.2"
          - "9.10.1"
        # Use only the "main" (usually latest) compiler version on non-Linux
        exclude:
          - os: macOS-latest
            ghc: 9.10.1
          - os: macOS-latest
            ghc: 9.8.2
          - os: macOS-latest
            ghc: 9.4.8
          - os: macOS-latest
            ghc: 9.2.8
          - os: macOS-latest
            ghc: 9.0.2
          - os: macOS-latest
            ghc: 8.10.7
          - os: windows-latest
            ghc: 9.10.1
          - os: windows-latest
            ghc: 9.8.2
          - os: windows-latest
            ghc: 9.4.8
          - os: windows-latest
            ghc: 9.2.8
          - os: windows-latest
            ghc: 9.0.2
          - os: windows-latest
            ghc: 8.10.7

    steps:
    - uses: actions/checkout@v4
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v2
      id: setup-haskell-cabal
      name: Setup Haskell
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}

    - uses: actions/cache@v3
      name: Cache cabal-store
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: ${{ runner.os }}-${{ matrix.ghc }}-cabal

    - name: Build
      run: |
        cabal update
        cabal build --project-file=cabal.project.ci --enable-tests --enable-benchmarks --write-ghc-environment-files=always

    - name: Test
      run: |
        cabal test --project-file=cabal.project.ci all --enable-tests

    - name: Haddock
      # Run haddock for all components
      run: |
        cabal haddock --project-file=cabal.project.ci --haddock-all

  stack:
    name: stack / ghc ${{ matrix.ghc }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        stack: ["3.1.1"]
        ghc: ["9.6.6"]

    steps:
    - uses: actions/checkout@v4
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event.ref == 'refs/heads/master'

    - uses: haskell/actions/setup@v2
      name: Setup Haskell Stack
      with:
        ghc-version: ${{ matrix.ghc }}
        stack-version: ${{ matrix.stack }}

    - uses: actions/cache@v3
      name: Cache ~/.stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-${{ matrix.ghc }}-stack

    - name: Build
      run: |
        stack build --system-ghc --test --bench --no-run-tests --no-run-benchmarks --ghc-options '-Werror' --haddock --no-haddock-deps

    - name: Test
      run: |
        stack test --system-ghc
